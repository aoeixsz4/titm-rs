
boundaries: n 3, e -2, s -1, w 9
boundaries: n 3, e -25, s -22, w 37
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 4, e -5, s -2, w 2
boundaries: n 3, e -25, s -22, w 2
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -6, s -2, w 4
boundaries: n 3, e -6, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 4, e -2, s -1, w 7
boundaries: n 3, e -25, s -22, w 24
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 4, e -7, s -2, w 2
boundaries: n 3, e -25, s -22, w 38
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -3, s -5, w 6
boundaries: n 3, e -25, s -22, w 37
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -13, s -2, w 1
boundaries: n 3, e -25, s -22, w 9
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -5, s -2, w 3
boundaries: n 3, e -25, s -22, w 43
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -1, s -5, w 3
boundaries: n 3, e -25, s -22, w 21
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 4, e -7, s -2, w 1
boundaries: n 3, e -25, s -22, w 45
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -1, s -1, w 6
boundaries: n 3, e -11, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 6, e -1, s -1, w 5
boundaries: n 3, e -2, s -22, w 4
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -2, s -3, w 2
boundaries: n 3, e -25, s -22, w 3
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -4, s -3, w 4
boundaries: n 3, e -25, s -22, w 33
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -3, s -1, w 1
boundaries: n 3, e -25, s -22, w 32
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -7, s -3, w 3
boundaries: n 3, e -25, s -22, w 14
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -5, s -3, w 3
boundaries: n 3, e -25, s -22, w 14
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -6, s -2, w 4
boundaries: n 3, e -25, s -22, w 41
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -13, s -1, w 2
boundaries: n 3, e -25, s -22, w 8
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -6, s -1, w 1
boundaries: n 3, e -7, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -2, s -3, w 2
boundaries: n 3, e -6, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -2, s -2, w 2
boundaries: n 3, e -25, s -22, w 28
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -5, s -3, w 1
boundaries: n 3, e -25, s -22, w 48
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -4, s -2, w 6
boundaries: n 3, e -6, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -6, s -1, w 7
boundaries: n 3, e -25, s -22, w 9
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -3, s -1, w 1
boundaries: n 3, e -25, s -22, w 46
boundaries: n 1, e -86, s -23, w 104
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -7, s -3, w 2
boundaries: n 3, e -25, s -22, w 30
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -2, s -3, w 2
boundaries: n 3, e -25, s -22, w 43
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -4, s -1, w 4
boundaries: n 3, e -25, s -22, w 10
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -2, s -1, w 5
boundaries: n 3, e -25, s -22, w 9
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -4, s -4, w 2
boundaries: n 3, e -16, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 5, e -7, s -1, w 7
boundaries: n 3, e -25, s -22, w 36
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -4, s -4, w 6
boundaries: n 3, e -25, s -22, w 4
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -10, s -2, w 3
boundaries: n 3, e -25, s -22, w 41
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -3, s -3, w 2
boundaries: n 3, e -17, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -5, s -2, w 1
boundaries: n 3, e -3, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -4, s -2, w 3
boundaries: n 3, e -7, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -5, s -2, w 3
boundaries: n 3, e -25, s -22, w 8
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -10, s -1, w 4
boundaries: n 3, e -25, s -22, w 15
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -1, s -3, w 13
boundaries: n 3, e -12, s -22, w 2
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 1, e -4, s -3, w 1
boundaries: n 3, e -5, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -3, s -3, w 7
boundaries: n 3, e -11, s -22, w 56
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 3, e -3, s -1, w 2
boundaries: n 3, e -25, s -22, w 6
boundaries: n 1, e -106, s -23, w 84
boundaries: n 18, e -175, s -6, w 15
warning: unused import: `Stderr`
  --> src/main.rs:26:45
   |
26 | use std::io::{stdin, stdout, stderr, Write, Stderr};
   |                                             ^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::thread`
  --> src/main.rs:28:5
   |
28 | use std::thread;
   |     ^^^^^^^^^^^

warning: unused import: `termion::cursor`
  --> src/main.rs:32:5
   |
32 | use termion::cursor;
   |     ^^^^^^^^^^^^^^^

warning: unused import: `termion::input::TermReadEventsAndRaw`
  --> src/main.rs:34:5
   |
34 | use termion::input::TermReadEventsAndRaw;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `stdin`
  --> src/main.rs:89:17
   |
89 |             let stdin = stdin();
   |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_stdin`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused `std::result::Result` that must be used
   --> src/main.rs:116:17
    |
116 |                 stdout.write(&buf[buf.len() - 1..]);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(unused_must_use)]` on by default
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:117:17
    |
117 |                 stdout.flush();
    |                 ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:121:25
    |
121 |                         stderr.write(format!("boundaries: n {}, e {}, s {}, w {}\n", north, east, south, west).as_bytes());
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:124:33
    |
124 | ...                   stderr.write(format!("wand at location: {}, {}\n", dy, dx).as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:125:33
    |
125 | ...                   stderr.flush();
    |                       ^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:127:33
    |
127 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:128:33
    |
128 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:131:29
    |
131 | ...                   pty_writer.write("<y   ".as_bytes());
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

warning: unused `std::result::Result` that must be used
   --> src/main.rs:132:29
    |
132 | ...                   pty_writer.flush();
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = note: this `Result` may be an `Err` variant, which should be handled

boundaries: n 2, e -5, s -2, w 3
wand at location: 1, 0
